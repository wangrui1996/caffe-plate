I0419 11:38:15.517647 24039 caffe.cpp:218] Using GPUs 0
I0419 11:38:15.569087 24039 caffe.cpp:223] GPU 0: TITAN Xp
I0419 11:38:15.777330 24039 solver.cpp:44] Initializing solver from parameters: 
train_net: "models/oilupload/people_attribe/train.prototxt"
test_net: "models/oilupload/people_attribe/test.prototxt"
test_iter: 9
test_interval: 500
base_lr: 4e-06
display: 50
max_iter: 1200000
lr_policy: "multistep"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
snapshot: 10000
snapshot_prefix: "models/oilupload/people_attribe/oilupload_people_attribe"
solver_mode: GPU
device_id: 0
debug_info: false
train_state {
  level: 0
  stage: ""
}
snapshot_after_train: true
test_initialization: true
average_loss: 50
stepvalue: 80000
stepvalue: 100000
stepvalue: 120000
iter_size: 1
type: "SGD"
I0419 11:38:15.777564 24039 solver.cpp:77] Creating training net from train_net file: models/oilupload/people_attribe/train.prototxt
I0419 11:38:15.777923 24039 net.cpp:53] Initializing net from parameters: 
name: "oilupload_people_attribe_train"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: "pythonLayer"
    layer: "DataLayer"
    param_str: "{\'expand_ratio\': 1.1, \'label_txt\': \'data/people_attribe/trainval.txt\', \'cutting_ratio\': 0.3, \'batch_size\': 256, \'height\': 48, \'width\': 48, \'train\': True, \'prob\': 0.7}"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "conv1_3"
  type: "Convolution"
  bottom: "conv1_2"
  top: "conv1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_3"
  type: "ReLU"
  bottom: "conv1_3"
  top: "conv1_3"
}
layer {
  name: "conv1_4"
  type: "Convolution"
  bottom: "conv1_3"
  top: "conv1_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_4"
  type: "ReLU"
  bottom: "conv1_4"
  top: "conv1_4"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_4"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "conv2_3"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_3"
  type: "ReLU"
  bottom: "conv2_3"
  top: "conv2_3"
}
layer {
  name: "conv2_4"
  type: "Convolution"
  bottom: "conv2_3"
  top: "conv2_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu2_4"
  type: "ReLU"
  bottom: "conv2_4"
  top: "conv2_4"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_4"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 1
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv4_2"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "fc6"
  type: "Convolution"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 6
    kernel_size: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
    dilation: 6
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "output_people_recog"
  type: "InnerProduct"
  bottom: "fc6"
  top: "output_people_recog"
  inner_product_param {
    num_output: 4
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "output_people_recog"
  bottom: "label"
  top: "loss"
}
I0419 11:38:15.778149 24039 layer_factory.hpp:77] Creating layer data
F0419 11:38:15.948724 24039 layer_factory.hpp:69] Check failed: registry.count(type) == 0 (1 vs. 0) Layer type Convolution already registered.
*** Check failure stack trace: ***
    @     0x7f6e3d1d10cd  google::LogMessage::Fail()
    @     0x7f6e3d1d2f33  google::LogMessage::SendToLog()
    @     0x7f6e3d1d0c28  google::LogMessage::Flush()
    @     0x7f6e3d1d3999  google::LogMessageFatal::~LogMessageFatal()
    @     0x7f6e3d7656de  caffe::LayerRegistry<>::AddCreator()
    @     0x7f6db9143869  __static_initialization_and_destruction_0()
    @     0x7f6e3de7b733  (unknown)
    @     0x7f6e3de801ff  (unknown)
    @     0x7f6e3b8e52df  _dl_catch_exception
    @     0x7f6e3de7f7ca  (unknown)
    @     0x7f6e16d48f96  (unknown)
    @     0x7f6e3b8e52df  _dl_catch_exception
    @     0x7f6e3b8e536f  _dl_catch_error
    @     0x7f6e16d49735  (unknown)
    @     0x7f6e16d49051  dlopen
    @     0x7f6e3c5164f0  _PyImport_GetDynLoadFunc
    @     0x7f6e3c4a0c80  _PyImport_LoadDynamicModule
    @     0x7f6e3c524afe  (unknown)
    @     0x7f6e3c4a1e91  (unknown)
    @     0x7f6e3c4a2392  PyImport_ImportModuleLevel
    @     0x7f6e3c404de4  (unknown)
    @     0x7f6e3c3a4333  PyObject_Call
    @     0x7f6e3c52e7a7  PyEval_CallObjectWithKeywords
    @     0x7f6e3c3faac9  PyEval_EvalFrameEx
    @     0x7f6e3c52f278  PyEval_EvalCodeEx
    @     0x7f6e3c3f7029  PyEval_EvalCode
    @     0x7f6e3c51f1cc  PyImport_ExecCodeModuleEx
    @     0x7f6e3c524462  (unknown)
    @     0x7f6e3c524a3e  (unknown)
    @     0x7f6e3c4a1e91  (unknown)
    @     0x7f6e3c4a2392  PyImport_ImportModuleLevel
    @     0x7f6e3c404de4  (unknown)
